(function (global, factory) {
  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('theme-ui'), require('@mdx-js/react'), require('react'), require('@emotion/core'), require('deepmerge')) :
  typeof define === 'function' && define.amd ? define(['exports', 'theme-ui', '@mdx-js/react', 'react', '@emotion/core', 'deepmerge'], factory) :
  (factory((global.sidenav = {}),global.themeUi,global.react,global.react,global.core,global.deepmerge));
}(this, (function (exports,themeUi,react,React,core,merge) {
  var React__default = 'default' in React ? React['default'] : React;
  merge = merge && merge.hasOwnProperty('default') ? merge['default'] : merge;

  function _defineProperty(obj, key, value) {
    if (key in obj) {
      Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
      });
    } else {
      obj[key] = value;
    }

    return obj;
  }

  function _extends() {
    _extends = Object.assign || function (target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];

        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }

      return target;
    };

    return _extends.apply(this, arguments);
  }

  function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);

    if (Object.getOwnPropertySymbols) {
      var symbols = Object.getOwnPropertySymbols(object);
      if (enumerableOnly) symbols = symbols.filter(function (sym) {
        return Object.getOwnPropertyDescriptor(object, sym).enumerable;
      });
      keys.push.apply(keys, symbols);
    }

    return keys;
  }

  function _objectSpread2(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i] != null ? arguments[i] : {};

      if (i % 2) {
        ownKeys(Object(source), true).forEach(function (key) {
          _defineProperty(target, key, source[key]);
        });
      } else if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
      } else {
        ownKeys(Object(source)).forEach(function (key) {
          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
      }
    }

    return target;
  }

  function _objectWithoutPropertiesLoose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;

    for (i = 0; i < sourceKeys.length; i++) {
      key = sourceKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      target[key] = source[key];
    }

    return target;
  }

  function _objectWithoutProperties(source, excluded) {
    if (source == null) return {};

    var target = _objectWithoutPropertiesLoose(source, excluded);

    var key, i;

    if (Object.getOwnPropertySymbols) {
      var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

      for (i = 0; i < sourceSymbolKeys.length; i++) {
        key = sourceSymbolKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
        target[key] = source[key];
      }
    }

    return target;
  }

  function _slicedToArray(arr, i) {
    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();
  }

  function _toConsumableArray(arr) {
    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();
  }

  function _arrayWithoutHoles(arr) {
    if (Array.isArray(arr)) {
      for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];

      return arr2;
    }
  }

  function _arrayWithHoles(arr) {
    if (Array.isArray(arr)) return arr;
  }

  function _iterableToArray(iter) {
    if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter);
  }

  function _iterableToArrayLimit(arr, i) {
    if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === "[object Arguments]")) {
      return;
    }

    var _arr = [];
    var _n = true;
    var _d = false;
    var _e = undefined;

    try {
      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
        _arr.push(_s.value);

        if (i && _arr.length === i) break;
      }
    } catch (err) {
      _d = true;
      _e = err;
    } finally {
      try {
        if (!_n && _i["return"] != null) _i["return"]();
      } finally {
        if (_d) throw _e;
      }
    }

    return _arr;
  }

  function _nonIterableSpread() {
    throw new TypeError("Invalid attempt to spread non-iterable instance");
  }

  function _nonIterableRest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance");
  }

  var Overlay = function Overlay(_ref) {
    var onClick = _ref.onClick;
    return themeUi.jsx(React__default.Fragment, null, themeUi.jsx("div", {
      onClick: onClick,
      sx: {
        position: 'fixed',
        top: 0,
        right: 0,
        bottom: 0,
        left: 0
      }
    }), themeUi.jsx(core.Global, {
      styles: themeUi.css({
        body: {
          overflow: ['hidden', 'auto']
        }
      })
    }));
  };

  var createNestedLinks = function createNestedLinks(children) {
    var depth = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
    var links = React__default.Children.toArray(children).reduce(function (acc, child) {
      var type = child.props && child.props.mdxType;
      if (!child.props || !child.props.children) { return acc; }
      if (type === 'a') { return [].concat(_toConsumableArray(acc), [child]); }

      if (depth > 0 && type === 'ul') {
        var last = acc[acc.length - 1];
        acc[acc.length - 1] = React__default.cloneElement(last, {
          links: createNestedLinks(child.props.children)
        });
        return acc;
      }

      return [].concat(_toConsumableArray(acc), _toConsumableArray(createNestedLinks(child.props.children, depth + 1)));
    }, []);
    return links;
  };

  var flattenLinks = function flattenLinks(children) {
    return React__default.Children.toArray(children).reduce(function (acc, child) {
      if (child.props && child.props.mdxType === 'a') {
        return [].concat(_toConsumableArray(acc), [child]);
      }

      if (!child.props || !child.props.children) { return acc; }
      return React__default.Children.toArray([].concat(_toConsumableArray(acc), _toConsumableArray(flattenLinks(child.props.children))));
    }, []);
  };

  var Sidenav = React__default.forwardRef(function (_ref2, ref) {
    var open = _ref2.open,
        _ref2$styles = _ref2.styles,
        styles = _ref2$styles === void 0 ? {} : _ref2$styles,
        components = _ref2.components,
        props = _objectWithoutProperties(_ref2, ["open", "styles", "components"]);

    return themeUi.jsx(themeUi.ThemeProvider, {
      theme: {
        styles: merge({
          ul: {
            listStyle: 'none',
            p: 0,
            m: 0,
            ul: {
              a: {
                pl: 4
              }
            }
          },
          a: {
            display: 'block',
            px: 2,
            py: 2,
            color: 'inherit',
            textDecoration: 'none',
            fontSize: 1,
            fontWeight: 'bold'
          }
        }, styles)
      }
    }, open && themeUi.jsx(Overlay, props), themeUi.jsx(react.MDXProvider, {
      components: components
    }, themeUi.jsx("div", _extends({}, props, {
      ref: ref,
      sx: {
        position: ['fixed', 'sticky'],
        top: 0,
        left: 0,
        bottom: [0, 'auto'],
        zIndex: 1,
        minWidth: 0,
        width: 256,
        maxHeight: ['100vh', 'none'],
        overflowX: 'visible',
        overflowY: 'auto',
        WebkitOverflowScrolling: 'touch',
        transition: 'transform .2s ease-out',
        transform: [open ? 'translateX(0)' : 'translate(-100%)', 'none'],
        bg: ['background', 'transparent']
      }
    }))));
  });
  var AccordionButton = function AccordionButton(props) {
    var transform = props.open ? 'rotate(-180 8 8)' : 'rotate(0 8 8)';
    var disabled = props.pathname && props.pathname.includes(props.href);
    return themeUi.jsx("button", _extends({
      title: "Expand Section",
      disabled: disabled
    }, props, {
      sx: {
        appearance: 'none',
        display: 'flex',
        alignItems: 'center',
        p: 2,
        m: 0,
        border: 0,
        borderRadius: 0,
        color: 'inherit',
        bg: 'transparent',
        ':hover,:focus': {
          color: 'primary'
        },
        '&:disabled': {
          opacity: 0.25
        }
      }
    }), themeUi.jsx("svg", {
      viewBox: "0 0 16 16",
      width: "12",
      height: "12"
    }, themeUi.jsx("g", {
      sx: {
        transformOrigin: '8 8',
        transition: 'transform .1s ease-out'
      },
      transform: transform
    }, themeUi.jsx("path", {
      stroke: "currentcolor",
      strokeWidth: "2",
      fill: "none",
      d: "M14 6 L8 12 L2 6"
    }))));
  };

  var NavLinks = function NavLinks(_ref3) {
    var open = _ref3.open,
        _ref3$pathname = _ref3.pathname,
        pathname = _ref3$pathname === void 0 ? '' : _ref3$pathname,
        links = _ref3.links,
        href = _ref3.href,
        Link = _ref3.Link,
        props = _objectWithoutProperties(_ref3, ["open", "pathname", "links", "href", "Link"]);

    if (!links) { return false; }
    if (!open && !pathname.includes(href)) { return false; }
    return themeUi.jsx("ul", {
      sx: {
        listStyle: 'none',
        m: 0,
        p: 0
      }
    }, links.map(function (link, j) {
      return themeUi.jsx("li", {
        key: j
      }, themeUi.jsx(Link, {
        href: link.props.href,
        children: link.props.children,
        className: link.props.className,
        sx: {
          pl: 4
        }
      }));
    }));
  };

  var AccordionNav = React__default.forwardRef(function (_ref4, ref) {
    var open = _ref4.open,
        children = _ref4.children,
        _ref4$components = _ref4.components,
        components = _ref4$components === void 0 ? {} : _ref4$components,
        className = _ref4.className,
        _ref4$pathname = _ref4.pathname,
        pathname = _ref4$pathname === void 0 ? '' : _ref4$pathname,
        props = _objectWithoutProperties(_ref4, ["open", "children", "components", "className", "pathname"]);

    var links = createNestedLinks(children);

    var _useState = React.useState({}),
        _useState2 = _slicedToArray(_useState, 2),
        expanded = _useState2[0],
        setExpanded = _useState2[1];

    var Link = components.a || 'a';

    var toggle = function toggle(i) {
      return function (e) {
        e.stopPropagation();
        setExpanded(_objectSpread2({}, expanded, _defineProperty({}, i, !expanded[i])));
      };
    };

    return themeUi.jsx("div", null, open && themeUi.jsx(Overlay, props), themeUi.jsx("div", {
      ref: ref,
      className: className,
      sx: {
        position: ['fixed', 'sticky'],
        top: 0,
        left: 0,
        bottom: [0, 'auto'],
        zIndex: 1,
        minWidth: 0,
        width: 256,
        maxHeight: ['100vh', 'none'],
        overflowX: 'visible',
        overflowY: 'auto',
        WebkitOverflowScrolling: 'touch',
        transition: 'transform .2s ease-out',
        transform: [open ? 'translateX(0)' : 'translate(-100%)', 'none'],
        bg: ['background', 'transparent']
      }
    }, themeUi.jsx("ul", {
      sx: {
        listStyle: 'none',
        p: 0,
        m: 0
      }
    }, links.map(function (link, i) {
      return themeUi.jsx("li", {
        key: i
      }, themeUi.jsx("div", {
        sx: {
          display: 'flex',
          alignItems: 'center'
        }
      }, themeUi.jsx(Link, {
        href: link.props.href,
        children: link.props.children,
        className: link.props.className
      }), link.props.links && themeUi.jsx(AccordionButton, {
        href: link.props.href,
        pathname: pathname,
        open: expanded[i],
        sx: {
          ml: 'auto'
        },
        onClick: toggle(i)
      })), themeUi.jsx(NavLinks, _extends({}, link.props, {
        open: expanded[i],
        pathname: pathname,
        Link: Link
      })));
    }))));
  });

  var removeSlash = function removeSlash(str) {
    return str.length > 1 ? str.replace(/\/$/, '') : str;
  };

  var PaginationLink = function PaginationLink(_ref5) {
    var label = _ref5.label,
        children = _ref5.children,
        props = _objectWithoutProperties(_ref5, ["label", "children", "mdxType", "originalType", "parentName"]);

    return themeUi.jsx("a", _extends({}, props, {
      sx: {
        fontSize: 1,
        color: 'inherit',
        textDecoration: 'none',
        fontWeight: 'bold'
      }
    }), themeUi.jsx("div", null, label), themeUi.jsx("div", {
      sx: {
        fontSize: 3
      }
    }, children));
  };

  var Pagination = function Pagination(_ref6) {
    var _ref6$pathname = _ref6.pathname,
        pathname = _ref6$pathname === void 0 ? '' : _ref6$pathname,
        children = _ref6.children,
        props = _objectWithoutProperties(_ref6, ["pathname", "children"]);

    var links = flattenLinks(children);
    var index = links.findIndex(function (link) {
      return link.props.href === removeSlash(pathname);
    });
    var hasPagination = index > -1;
    var previous = links[index - 1];
    var next = links[index + 1];
    return themeUi.jsx("div", _extends({}, props, {
      sx: {
        display: 'flex'
      }
    }), hasPagination && previous && themeUi.jsx(PaginationLink, _extends({}, previous.props, {
      label: "Previous:"
    })), themeUi.jsx("div", {
      sx: {
        mx: 'auto'
      }
    }), hasPagination && next && themeUi.jsx(PaginationLink, _extends({}, next.props, {
      label: "Next:"
    })));
  };

  exports.Sidenav = Sidenav;
  exports.AccordionButton = AccordionButton;
  exports.AccordionNav = AccordionNav;
  exports.Pagination = Pagination;

})));
//# sourceMappingURL=index.umd.js.map
